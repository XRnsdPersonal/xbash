#! /bin/bash
#----------------    user info Config    ---------------------------
export userPassword=
#----------------    PS1 config  ------------------
export isUseCustomPS1=
#----------------    Android development environment config    ---------------------------
isUseCustomAndroidDevEnvConfig=
if [[ "$isUseCustomAndroidDevEnvConfig" = "true" ]]; then
    jdkPathOracle6=${rDirPathTools}/jdk/1.6.038
    jdkPathOpen7=/usr/lib/jvm/java-7-openjdk-amd64
    jdkPathOpen8=/usr/lib/jvm/java-8-openjdk-amd64
    jdkPath=$jdkPathOpen8
    jdkHomePath=$jdkPath
    gccPath=/usr/bin/gcc-4.8

    #根据android sdk 版本修改当前java sdk 配置
    sdkVersion=${sdkVersionDefault:-'27'} # 默认使用open jdk 8
    filePath=build/core/version_defaults.mk
    if [[ -f "$filePath" ]]; then
            key="PLATFORM_SDK_VERSION := "
            sdkVersion=$(cat $filePath | grep "$key")
            sdkVersion=${sdkVersion//$key/}
            sdkVersion=$(echo $sdkVersion |sed s/[[:space:]]//g)
    fi
    if (( $sdkVersion>=24 ));then
                jdkHomePath=$jdkPathOpen8
                jdkPath=${jdkPathOpen8}/bin/java
                gccPath=/usr/bin/gcc-4.8
        elif (( $sdkVersion<21 ));then
                jdkHomePath=$jdkPathOracle6
                jdkPath=${jdkPathOracle6}/bin/java
                gccPath=/usr/bin/gcc-4.4
        else
                jdkPath=${jdkPathOpen7}/bin/java  
                jdkHomePath=$jdkPathOpen7
                gccPath=/usr/bin/gcc-4.6
        fi

    bashProcessCount=($(pgrep -f bash))
    bashProcessCount=${#bashProcessCount[@]}
    isUpdate=
    if [[ -f "$filePath" ]]; then
        isUpdate=true
        [[ -z "$isResetXbash" ]]&& (($bashProcessCount!=2))&& isUpdate=
        [[ "$isResetJdk" != "true" ]] && (($bashProcessCount!=2)) && isUpdate=
    else
        [[ "$isResetJdk" = "true" ]] && (($bashProcessCount==2)) && isUpdate=true
        [[ -z "$isResetXbash" ]]&& (($bashProcessCount==2)) && isUpdate=true
    fi
    [[ "$isUpdate" = "true" ]] && if [[ -f "$jdkPath" ]]&&[[ -f "${jdkPath}c" ]]; then
        echo "$(echo "$userPassword" | sudo -S -p '' echo " " > /dev/null)" >/dev/null

        [[ -z $(update-alternatives --list java|grep $jdkPath) ]] && sudo -p '' -S update-alternatives --install /usr/bin/java java $jdkPath 300
        echo "$jdkPath" | sudo -p '' -S update-alternatives --config java >/dev/null

        jdkPathc=${jdkPath}c
        [[ -z $(update-alternatives --list javac|grep $jdkPathc) ]] && sudo -p '' -S  update-alternatives --install /usr/bin/javac javac $jdkPathc 300
        echo "$jdkPathc" | sudo -p '' -S update-alternatives --config javac >/dev/null

        jdkPathp=${jdkPath}p
        [[ -z $(update-alternatives --list javac|grep $jdkPathp) ]] && sudo -p '' -S  update-alternatives --install /usr/bin/javap javap $jdkPathp 300
        echo "$jdkPathp" | sudo -p '' -S update-alternatives --config javac >/dev/null
    else
        echo -e "\033[1;31mJava_环境配置更新失败\njdkPath=$jdkPath\n\033[0m"
    fi

    if [[ "$isResetGcc" = "true" ]]&&[[ -f "$gccPath" ]] ;then
        #sudo update-alternatives --remove gcc /usr/bin/gcc-x.x
        #sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-x.x 300
        echo "$gccPath" | sudo -p '' -S update-alternatives --config gcc >/dev/null
        echo $(echo $gccPath | sed "s cc ++ g" ) | sudo -p '' -S update-alternatives --config g++ >/dev/null
    fi

    export JAVA_HOME=$jdkHomePath
    export JRE_HOME=${JAVA_HOME}/jre
    export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib

    export ANDROID_SET_JAVA_HOME=true
    export ANDROID_PRE_BUILD_PATHS=$JAVA_HOME
    export ANDROID_JAVA_TOOLCHAIN=$JAVA_HOME

    export ANDROID_SDK=${dirPathHomeTools}/sdk_adt/5.1
    #export ANDROID_SDK=/media/cache/tools/android-sdk-linux
    export ANDROID_HOME=$ANDROID_SDK
    export ANDROID_SDK_HOME=$ANDROID_SDK
    export ANDROID_SDK_BUILD_TOOL=${ANDROID_SDK_HOME}/build-tools/android-4.4W
    export ANDROID_NDK=${dirPathHomeTools}/ndk/android-ndk-r12b

    #清理PATH环境变量中的java环境项
    PATHLOCAL=
    newList=($(echo "${PATH}"| sed 's?:? ?g'))
    for item in ${newList[@]}; do
        [[ ! -z $(echo $item |egrep -i "java|jdk|jre") ]] && continue
        [[ -z ${PATHLOCAL} ]]&&PATHLOCAL="${item}" || PATHLOCAL="${PATHLOCAL}:${item}"
    done
    export PATH=${PATHLOCAL}
    #增加新配置
    export PATH=$PATH:${JAVA_HOME}/bin:${JRE_HOME}/bin
    export PATH=$PATH:$ANDROID_SDK_BUILD_TOOL
    export PATH=$PATH:$ANDROID_NDK
    export PATH=$PATH:/usr/libexec/git-core
    export PATH=$PATH:$dirPathHomeTools

    [ ! -d "$JAVA_HOME" ] && echo -e "\033[1;31mJava_环境配置错误\n${JAVA_HOME} 不存在\n\033[0m"
    [ ! -d "$ANDROID_SDK" ] && echo -e "\033[1;31mAndroid_SDK_环境配置错误\n${ANDROID_SDK} 不存在\n\033[0m"
    [ ! -d "$ANDROID_NDK" ] && echo -e "\033[1;31mAndroid_NDK_环境配置错误\n${ANDROID_NDK} 不存在\033[0m"
fi

#----------------    Android optimization acceleration    ---------------------------
#编译缓存
isUseBuildCcache=
if [ "$isUseBuildCcache" = "true" ]; then
    dirPathCache=/media/xxxx/.ccache
    [ ! -d $dirPathCache  ]&& mkdir $dirPathCache
    if [[ -d  "${dirPathCache}" ]]; then
        export CCACHE_DIR=$dirPathCache
        export USE_CCACHE=1
        export CACHE_UMASK=002
        unset CCACHE_HARDLINK
    fi
fi

#分布式编译集群的IP组
isUseDistcc=
if [[ "$isUseDistcc" = "true" ]]; then
    export PATH=/usr/lib/distcc:$PATH
    # export WRAPPER=ccache
    # export CCACHE_PREFIX=distcc
    export DISTCC_HOSTS="localhost 192.168.1.55"
fi

#----------------    Android decompile    ---------------------------
export DIR_PATH_ANDROID_DECOMPILE_TOOLS=${rDirPathUserHome}/xconfig/decompile/tools