#! /bin/bash
#--------------------------终端自身设定---------------------------
#终端提示
export PS1='xrnsd\[\033[44m\][\w]\[\033[0m\]:'
# 忽略重复命令
export HISTCONTROL=erasedups
# 忽略特定命令
export HISTIGNORE="[   ]*:ls:ll:cd:vi:pwd:sync:exit:history*"
# 命令历史文件大小
export HISTFILESIZE=10000000000
# 保存历史命令条数
export HISTSIZE=500
# 以追加的方式保存命令历史
shopt -s histappend

#---------------- 自动整理bash历史记录  ----------------------------------
filePathBashHistory=${dirPathHome}/.bash_history
filePathBashHistoryTemp=${filePathBashHistory}_temp
filePathBashHistoryArchive=${filePathBashHistory}_archive
filePathBashHistoryArchiveTemp=${filePathBashHistoryArchive}_temp
filePathGitBash=${dirPathHomeCmdConfig}/bashrc/git-completion.bash

#去重
sort -k2n $filePathBashHistory | awk '{if ($0!=line) print;line=$0}' >${filePathBashHistoryTemp}&&\
mv $filePathBashHistoryTemp $filePathBashHistory

#备份历史
let lineCountMax=HISTSIZE-1
lineCount=$(wc -l < $filePathBashHistory)
if (($lineCount > $lineCountMax)); then
    prune_lines=$(($lineCount - $lineCountMax))
    cat $filePathBashHistory >> $filePathBashHistoryArchive \
    && sort -k2n $filePathBashHistoryArchive | awk '{if ($0!=line) print;line=$0}' >${filePathBashHistoryArchiveTemp} \
    && mv $filePathBashHistoryArchiveTemp $filePathBashHistoryArchive \
    && > $filePathBashHistory
fi

#----------------    部分环境变量    ---------------------------
export ANDROID_SDK=${dirPathHomeTools}/sdk/4.4
export ANDROID_SDK_HOME=$ANDROID_SDK
export ANDROID_SDK_BUILD_TOOL=${ANDROID_SDK_HOME}/build-tools/android-4.4W
export ANDROID_NDK=${dirPathHomeTools}/ndk/android-ndk-r12b
export LD_LIBRARY_PATH=${dirPathHomeTools}/sp_flash_tool_v5.1548:${dirPathHomeTools}/sp_flash_tool_v5.1548/lib:$LD_LIBRARY_PATH
export PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin:$ANDROID_SDK_BUILD_TOOL:/usr/local/cuda-7.5/bin:$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$ANDROID_NDK:/usr/local/cuda-8.0/bin/:$PATH
export PATH=$PATH:/usr/libexec/git-core

#-------------------------标记为环境模式，此模式说明直接调用脚本实现------------------
export  XMODULE="env"

#--------------------------环境检测---------------------------
if [ ! -d "$JAVA_HOME" ];then
    echo -e "\033[1;31mJava_环境配置错误\n$JAVA_HOME不存在\n\033[0m"
fi
if [ ! -d "$ANDROID_SDK" ];then
    echo -e "\033[1;31mAndroid_SDK_环境配置错误\n$ANDROID_SDK 不存在\n\033[0m"
else
    alias .9='export XCMD=.9;${dirPathHome}/tools/sdk/5.1/tools/draw9patch'
fi
if [ ! -d "$ANDROID_NDK" ];then
    echo -e "\033[1;31mAndroid_NDK_环境配置错误\n$ANDROID_NDK 不存在\033[0m"
fi
if [ ! -f "$filePathGitBash" ];then
    echo -e "\033[1;31mgit bash 配置文件:\n$filePathGitBash 不存在\033[0m"
else
    source $filePathGitBash
fi

fileNameXbashTragetConfigBase=config_base
filePathXbashTragetConfigBase=${dirPathHomeCmdConfig}/${fileNameXbashTragetConfigBase}
dirPathHomeCmdConfigBashrc=${dirPathHomeCmdConfig}/bashrc
#全局变量
if [ -f $filePathXbashTragetConfigBase ];then
    #不重复添加config_base的只读设定
    if [ -z "$rNameUser" ];then
        source  $filePathXbashTragetConfigBase
    fi
    # 函数
    if [ -f ${rDirPathCmdsModule}/${rFileNameCmdModuleTools} ];then
        source  ${rDirPathCmdsModule}/${rFileNameCmdModuleTools}

        ftLog

        #命令封装
        alias xle='export XCMD=xle;\
            ftLog;\
            adb logcat -c;adb logcat "*:E" 2>&1|tee -a $mFilePathLog'
        alias xgl='gitVersionMin="2.6.0";\
            gitVersionNow=$(git --version);\
            gitVersionNow=${gitVersionNow//git version/};\
            gitVersionNow=$(echo $gitVersionNow |sed s/[[:space:]]//g);\
            if version_lt $gitVersionMin $gitVersionNow; then
                git log --date=format-local:'%y%m%d' --pretty=format:"%C(bold blue) %H %Creset %an %ad %s" -15
            else
                git log --date=short --pretty=format:"%C(bold blue) %H %Creset %an %ad %s" -15
            fi'
        alias xb='export XCMD=xb;${dirPathHomeCmd}/main.sh'
        alias xk='export XCMD=xk;${dirPathHomeCmd}/main.sh'
        alias xc='export XCMD=xc;${dirPathHomeCmd}/main.sh'
        alias xu='export XCMD=xu;gedit  ${dirPathHomeCmdConfigBashrc}/config_bashrc_base.gone\
                        ${dirPathHomeCmdConfigBashrc}/config_bashrc_base'
        alias xh='export XCMD=xh;${dirPathHomeCmd}/main.sh -h $2'
        alias xss='export XCMD=xss;${dirPathHomeCmd}/main.sh reboot'
        alias xs='export XCMD=xs;${dirPathHomeCmd}/main.sh shutdown'
        alias xd='export XCMD=xd;${dirPathHomeCmd}/main.sh mtk_flashtool'
        alias xt='export XCMD=xt;python ${dirPathHomeCmd}/module/test/pytools.py $2'
        alias xi='export XCMD=xi;. ${dirPathHomeCmd}/${rFileNameCmdModuleCompile}'
        alias xbh='export XCMD=xbh;cat $filePathBashHistoryArchive $filePathBashHistory |grep $2'

        #命令选项快速适配
        complete -W "compile" xi
        complete -W "backup restore" xb
        complete -W "systemui monkey launcher" xk
        complete -W "restartadb help gjh test clean_data_garbage vvv bootanim pac -v -vvv -ft -ftall" xc

#----------------    shell 自身配置   ----------------------------------
         export PROMPT_COMMAND='\
         msg=$(history 1 | { read x y; echo $y; });\
         if [[ $msg =~ "git" ]];then
             ftFindGitBranch
         fi'
        export PROMPT_COMMAND="ftFindGitBranch;$PROMPT_COMMAND"
    else
        echo -e "\033[1;31mXbash函数加载失败[ToolsPath=${rDirPathCmdsModule}/${rFileNameCmdModuleTools}]\033[0m"
    fi
else
    echo -e "\033[1;31mXbash全局变量加载失败[filePathXbashTragetConfigBase=$filePathXbashTragetConfigBase]\033[0m"
fi
#-------------------------android优化加速部分------------------
#编译加速 c/c++ 部分
#缓存目录[android优化加速部分]
export CCACHE_DIR=/media/data/.ccache
export USE_CCACHE=1
export CACHE_UMASK=002
unset CCACHE_HARDLINK
#分布式编译集群的IP组
#export DISTCC_HOSTS="192.168.3.114"

#--------------------------命令封装---------------------------
alias ..="cd .."
alias ...="cd ../.."
alias xcc='cd $OLDPWD'
alias xr="source ~/.bashrc"
alias xl='export XCMD=xl;\
                adb logcat -c;\
                adb logcat | grep '
alias xp="export XCMD=xp;readlink -f"

alias unix2dos=todos
alias dos2unix=fromdos

#--------------------------命令封装[AOSP部分]---------------------------
alias xversion='cat packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java|grep "custom_build_version";\
                            cat packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java|grep "findPreference(KEY_BUILD_NUMBER).setSummary";\
                            cat packages/apps/ValidationTools/src/com/sprd/validationtools/itemstest/SystemVersionTest.java|grep -C 1 "platformVersion.setText(getString(R.string.build_number)"'
alias xmodel='cat build/tools/buildinfo.sh|grep "ro.product.model=";\
                            cat build/tools/buildinfo.sh|grep "ro.product.brand=";\
                            cat build/tools/buildinfo.sh|grep "ro.product.name=";\
                            cat build/tools/buildinfo.sh|grep "ro.product.device=";\
                            cat device/sprd/scx20/sp7731c_1h10_32v4/sp7731c_1h10_32v4_oversea.mk |grep "product.model.num";\
                            cat frameworks/base/core/res/res/values/strings.xml |grep "wifi_tether_configure_ssid_default"'
alias xcamera='cat device/sprd/scx20/sp7731c_1h10_32v4/BoardConfig.mk|grep "CAMERA_SUPPORT_SIZE :=";\
                             cat device/sprd/scx20/sp7731c_1h10_32v4/BoardConfig.mk|grep "LZ_CONFIG_CAMERA_TYPE :="'

alias xkk='cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_SAM_FACTORYMODE";\
                    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "TESTMODE_LIST";\
                    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "VERALION"'

alias xkmonkey='adb shell kill $(adb shell ps | grep monkey | awk "{print $2}")'
alias xmonkey='ftMonkeyTestByDevicesName'

alias xqselect='adb shell am start -n com.mtk.select/com.mtk.select.SelectActivity'
alias xqsetting='adb shell am start -n com.android.settings/com.android.settings.Settings'
alias xqcamera='adb shell am start -n com.android.camera2/com.android.camera.CameraActivity'
alias xqchanglogo='adb shell am start -n com.sprd.bootres/com.sprd.bootres.BootResSelectActivity'
alias xqcamera_test_sub='adb shell am start -n com.mediatek.factorymode/com.mediatek.factorymode.camera.SubCamera'

