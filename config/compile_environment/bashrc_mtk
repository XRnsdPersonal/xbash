# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
#===========================================自定义部分============
toolsdir=/home/xian-hp-u16/.software
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
export ANDROID_SDK=$toolsdir/android/X64/sdk
export ANDROID_SDK_HOME=$ANDROID_SDK
export ANDROID_NDK=$toolsdir/android/X64/ndk/android-ndk-r10c
export PATH=$/home/xian-hp-u16/.bin:/usr/local/arm-eabi-4.4.3/bin:$JAVA_HOME/bin:$JRE_HOME/bin:$PATH:$ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$ANDROID_NDK:$toolsdir/gradle/2.3/bin:$PATH

#--------------------------终端自身设定---------------------------
#终端提示
export PS1='XRnsd\[\033[44m\][\w]\[\033[0m\]:'
# 忽略[连续]重复命令
export HISTCONTROL=ignoredups
# 清除重复命令
# HISTCONTROL=erasedups
# 忽略特定命令
export HISTIGNORE="[   ]*:ls:ll:cd:vi:pwd:sync:exit:history*"
# 命令历史文件大小
export HISTFILESIZE=100000000
# 保存历史命令条数
export HISTSIZE=100000
# 以追加的方式保存命令历史
shopt -s histappend
#--------------------------命令封装---------------------------
dir_cmd_sh=/home/xian-hp-u16/cmds/
alias xc='${dir_cmd_sh}cscmd.sh'
alias xb='${dir_cmd_sh}cscmd.sh'
alias xd='echo 'x@2w4ea' | sudo -S $toolsdir/android/X64/download/mtk/SP_Flash_Tool_exe_Linux_v5.1532.00.100/flash_tool.sh'
alias .9='$toolsdir/android/X64/sdk/tools/draw9patch'
alias slog='/home/xian-hp-u16/log/v2.1.9/LogAndroid2PC.sh'
alias xi='. ${dir_cmd_sh}compile.sh'
alias xl='${dir_cmd_sh}cscmd.sh adb_logcat'
alias xk='${dir_cmd_sh}cscmd.sh'
alias xs='echo 'x@2w4ea' | sudo -S shutdown -h now'
alias xss='echo 'x@2w4ea' | sudo -S reboot'
alias jc='java -version'
alias ..='cd ..'
alias ...='cd ../..'

#--------------------------命令选项快速适配---------------------------
complete -W "restartadb help quickdel compileContextConfig gjh bug test clean_data_garbage" xc
complete -W "os" xb
complete -W "compile" xi
complete -W "systemui monkey" xk
#-------------------------android优化加速部分------------------
#编译加速 c/c++ 部分
export USE_CCACHE=1
export CACHE_UMASK=002
unset CCACHE_HARDLINK
#缓存目录
export CCACHE_DIR=/media/data_self/.ccache
#分布式编译集群的IP组
#export DISTCC_HOSTS="192.168.3.114"
#-------------------OpenGrok 配置--------------------
export OPENGROK_APP_SERVER=tomcat
export OPENGROK_TOMCAT_BASE=/usr/share/tomcat7
export CATALINA_HOME=$OPENGROK_TOMCAT_BASE
#opengrok home directory
export OPENGROK_INSTANCE_BASE=$toolsdir/opengrok-0.12.1/OpenGrok-0.12.1-src
#源码目录
export SRC_ROOT="/media/data_self/projects/version/sprd7731/idh"
#索引输出的目录
export DATA_ROOT="/var/opengrok/dataroot"
#为了避免乱码，这里设置LANG
#export LANG=zh_CN.gb2312
#======================================================================
