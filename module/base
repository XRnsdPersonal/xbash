#! /bin/bash
#####---------------------流程函数---------------------------#########
ftTimeLong()
{
	local ftName=脚本操作耗时记录
	 #时间少于1秒默认不显示操作耗时
	 #时间时分秒各单位不显示为零的结果
	time2=$(date +%s -d $(date +"%H:%M:%S"))
	time3=$(((time2-mRoTimeBackupStart)%60))
	time5=$(((time2-mRoTimeBackupStart)/3600))
	time4=$((((time2-mRoTimeBackupStart)-time5*3600)/60))
	if [ "$time5" -ne "0" ];
		then strS1=$time5时
		else strS1=""
	fi
	if [ "$time4" -ne "0" ];
		then strF1=$time4分
		else strF1=""
	fi
	if [ "$time3" -ne "0" ];
		then strM1=$time3秒
		else strM1=""
	fi
	if [ "$time3" -eq "0" ]&&[ "$time4" -eq "0" ] &&[ "$time5" -eq "0" ];
		then echo;echo;echo 1秒没到就结束了
		else echo 本技能耗时${strS1}${strF1}${strM1} ！
	fi
}

ftWhoAmI()## #命令权限判定
{
	local ftName=命令权限判定
	local cmdName=$1

	#耦合变量校验
    local valCount=1
    if [ $# -ne $valCount ]||[ -z "$cmdName" ]\
    					   ||[ -z "$mRoCmdsPermissionBase" ]\
    					   ||[ -z "$mRoCmdsPermissionRoot" ];then
		  ftEcho -ex "函数[${ftName}]参数错误，请查看函数使用示例"
	fi

	for cmd in ${mRoCmdsPermissionBase[@]}
	do
			if [ "$cmd" = "$cmdName" ]||[ "$XCMD" = "$cmdName" ];then
				commandAuthority=base
			fi
	done

	for cmd in ${mRoCmdsPermissionRoot[@]}
	do
			if [ "$cmd" = "$cmdName" ]||[ "$XCMD" = "$cmdName" ];then
				commandAuthority=root
			fi
	done
	}

ftWhoAmYou()
{
	local ftName=命令权限与环境权限不一致时，提示用户切换环境
	if [ `whoami` != "root" ]&&[ "$commandAuthority" = "root" ]; then
		echo "当前用户权限过低，请转换为root 用户后重新运行" ;exit
	fi
	if [ `whoami` = "root" ]&&[ "$commandAuthority" = "base" ];	then
			echo "转化普通用户后，再次尝试"; exit
	fi
	exit
}



ftEcho()
{
#=================== example=============================
#
#	 ftEcho [option] [Content]
#	 ftEcho e 错误的选择1
#=========================================================
	local ftName=工具信息提示
	option=$1
	Content=$2
	while true; do
	case $option in
	y | Y | -y | -Y)	echo -en "${Content}[y/n]"; break;;
	e | E | -e | -E)	echo -e "\033[31m$Content\033[0m"; break;;
	ex | EX | -ex | -EX)	echo -e "\033[31m$Content\033[0m"; exit;;
	s | S | -s | -S)	echo;echo -e "\033[44m$Content\033[0m"; break;;
	t | T | -t | -T)	echo -e "\e[41;33;1m =========== $Content ============= \e[0m"; break;;
	b | B | -b | -B)	echo;echo -e "\e[41;33;1m =========== $Content ============= \e[0m";echo; break;;
	g | G | -g | -G)cat<<EOF
	=========================================================================
	命令	--- 参数/命令说明
		|// 使用格式
		|-- 参数1	 ---------------- [参数权限] ----	参数说明
	=========================================================================
EOF
break;;
	* ) echo $option ;break;;
	esac
	done
}

ftMain()
{
	local ftName=工具主入口
	while true; do
	case $mRoBaseShellParameter2 in
	"test")		${mRoDirPathCmdTools}test.sh	 ;break;;
	"help")		ftReadMe $mRoBaseShellParameter3	;break;;
	v | V | -v |-V)	echo \"Xrnsd extensions to bash\" V0.5.1 beta	;break;;
	*)
	#权限约束开始
	ftWhoAmI $mRoBaseShellParameter2
	if [ "$commandAuthority" = "root" ]; then
		if [ `whoami` = "root" ]; then
			while true; do
			case $mRoBaseShellParameter2 in
				"backup")	${mRoDirPathCmdTools}system_backup_restore.sh backup; break;;
				"restore")	${mRoDirPathCmdTools}system_backup_restore.sh restore; break;;
				*)		ftEcho -e "	 没有有效的命令参数，请查看下面的说明";ftReadMe $XCMD; break;;
			esac
			done
		else
			ftWhoAmYou
		fi
	elif [ "$commandAuthority" = "base" ]; then
		if [ `whoami` = "base" ]; then
			while true; do
			case $mRoBaseShellParameter2 in
				"clean_data_garbage")	ftCleanDataGarbage ; break;;
				"mtk_flashtool")	ftMtkFlashTool ; break;;
				"restartadb")		ftRestartadb1; break;;
				"monkey")		ftKillPhoneAppByPackageName com.android.commands.monkey; break;;
				"systemui")		ftKillPhoneAppByPackageName com.android.systemui; break;;
				"launcher")		ftKillPhoneAppByPackageName com.android.launcher3; break;;
				# "gjh")			java -jar ${mRoDirPathUserHome}/tools/xls2values/androidi18nBuilder.jar; break;;
				*)			ftEcho -e "	 没有有效的命令参数，请查看下面的说明";ftReadMe $XCMD; break;;
			esac
			done
		else
			ftWhoAmYou
		fi
	#权限约束结束
	elif [ ${#mRoBaseShellParameter2} == 0 ]; then
		ftReadMe -a
	else
		while true; do
		case $XCMD in
		"xk")	 ftKillPhoneAppByPackageName $mRoBaseShellParameter2; break;;
		*)	ftEcho -e "	 没有有效的命令参数，请查看下面的说明";ftReadMe $XCMD; break;;
		esac
		done
	fi	
	break;;
	esac
	done

}

ftReadMe()
{
	local ftName=工具命令使用说明
	while true; do
		case "$1" in
		a | A | -a |-A)
	cat<<EOF
	=========================================================================
		命令	--- 参数/命令说明
		|// 使用格式
		|-- 参数1	 ---------------- [参数权限] ----	参数说明
	=========================================================================
	xb ----- 系统维护
		|// xb ×××××
		|
		|-- backup	---------------- [root] ------	备份系统
		|-- restore	---------------- [root] ------	还原系统
	xc ----- 常规自定义命令和扩展
		|// xc ×××××
		|
		|-- test	-------------------------------	 shell测试
		|-- clean_data_garbage				 清空回收站
		|-- restartadb	--------------------------	 重启adb服务
		|-- v ------------------------------------	 自定义命令版本
		|-- help					 查看自定义命令说明
		|-- gjh	---------------------------------	 生成国际化所需的xml文件
	xk ----- 关闭手机指定进程
		|// xk ×××××
		|
		|-- monkey	-------------------------------	关闭monkey
		|-- systemui	-----------------------------	关闭systemui
	xl ----- 过滤 android 含有tag的所有等级的log
		|// xl tag
		|
	xt ----- 检测shell脚本，语法检测和测试运行
		|// xt 脚本文件名
		|
	//xg	---- [无参] / 搜索文件里面的字符串
		|// xg 字符串
		|
	xle ----- 过滤 android 含有tag的E级log
		|// xle tag
		|
	xkd	---- [无参] / 快速删除海量文件
		|// xkd 文件夹
		|
	xbh ----- 根据标签过滤命令历史
		|// xbh 标签
		|
	xp ----- 查看文件绝对路径
		|// xp 文件名
		|
	xh ----- 查看具体命令说明
		|// xh 命令名
		|
	xi	---- [无参] / 快速初始化模块编译环境
	xr	---- [无参] / 使.bashrc修改生效
	.	 ---- [无参] / 进入上一级目录
	..	---- [无参] / 进入上两级目录
	xd	---- [无参] / mtk下载工具
	xu	---- [无参] / 打开.bashrc
	.9	---- [无参] / 打开.9工具
	xx	---- [无参] / 休眠
	xs	---- [无参] / 关机
	xss ---- [无参] / 重启

	===============	临时命令 ===================
	xversion--[无参] / 查看软件版本
	xg6572 ----- 下载mtk6572的工程
		|// xg6572 分支名
EOF
break;;
	xc |test | clean_data_garbage|restartadb | help | gjh)ftEcho -g;
cat<<EOF
	xc	----- 常规自定义命令和扩展
		|// xc ×××××
		|
		|-- test	-------------------------------	 shell测试
		|-- clean_data_garbage				清空回收站
		|-- restartadb	--------------------------	 重启adb服务
		|-- v ------------------------------------	 自定义命令版本
		|-- help					查看自定义命令说明
		|-- gjh ---------------------------------	 生成国际化所需的xml文件
EOF
break;;
	xb | backup | restore)ftEcho -g;
cat<<EOF
	xb	----- 系统维护
		|// xb ×××××
		|
		|-- backup	---------------- [root] ------	备份系统
		|-- restore	---------------- [root] ------	还原系统
EOF
break;;
	xk | monkey | systemui)ftEcho -g;
cat<<EOF
	xk	----- 关闭手机指定进程
		|// xk ×××××
		|
		|-- monkey	-------------------------------	关闭monkey
		|-- systemui	-----------------------------	关闭systemui
EOF
break;;
	xt)
cat<<EOF
	xt ----- 检测shell脚本，语法检测和测试运行
		|// xt 脚本文件名
EOF
break;;
	xh)
cat<<EOF
	xh ----- 查看具体命令说明
		|// xh 命令名
EOF
break;;
	*)ftReadMe -a;break;;
	esac
done
}
