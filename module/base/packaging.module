#!/bin/bash
alias ..="effect=进入父目录;cd .."
alias ...="effect=进入爷目录;cd ../.."
alias xcc='effect=进入原目录;cd $OLDPWD'

if [[ -n $(which cat) ]];then
    alias xbuildprop='effect=打印部分out下build.prop信息;[ -f "${ANDROID_PRODUCT_OUT}/system/build.prop" ] &&\
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.model=" && \
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.brand=" && \
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.name=" && \
                      cat ${ANDROID_PRODUCT_OUT}/system/build.prop|grep "ro.product.device=" '
    alias xbh='effect=bash命令历史查询;cat $filePathBashHistory |grep'
fi

if [[ -n $(which du) ]];then
    alias xdm='effect=查找最占用空间的20个目录;du -m --max-depth=2 | sort -nr | head -20 '
fi

if [[ -n $(which fuser) ]];then
     alias xkf='effect=解除文件或目录占用;fuser -m -k -i'
fi

if [ -f /usr/bin/gnome-session-quit ] ;then
     alias xsss='effect=注销系统;ftPowerManagement logout'
fi

if [[ -n $(which tr) ]];then
    alias xX='effect=字符串转大写;_xX(){  echo "$1" | tr '[a-z]' '[A-Z]' ;};_xX $1'
    alias Xx='effect=字符串转小写;_Xx(){  echo "$1" | tr '[A-Z]' '[a-z]' ;};_Xx $1'
fi

if [[ -n $(which todos) ]]&&[[ -n $(which fromdos) ]];then
    alias unix2dos=todos
    alias dos2unix=fromdos
fi

if [[ -n $(which find) ]];then
    alias xfind='effect=查找含特定字符串的文件;ftFind'
fi

if [[ -n $(which du) ]];then
    alias xfs='effect=查找最大的xx[默认10]个文件;ftDu'
fi

if [[ -n $(which fdupes) ]];then
    alias xfr='effect=查找重复文件;fdupes -Sr'
fi

if [ -d "$ANDROID_SDK" ];then
    alias xp='effect=快速push;ftAdbPush -f '
    alias xl='effect=过滤logcat;ftLogcatApplicationByTag'
    alias xas='effect=读取系统属性;adb shell settings get system'
    alias xle='effect=过滤错误的logcat;ftLogcatApplicationByTag -e'
    alias xlp="effect=根据包名过滤logcat;ftLogcatApplicationByTag -p"
    alias xk='effect=干掉设备对应包名的进程;ftKillApplicationByPackageName'

    [[ -f $rFilePathXbashDataBase ]]&&packageNameList="$(ftIniGetValue $rFilePathXbashDataBase androidDevicePackages packageNameList)"
    complete -W "${packageNameList[@]} launcher systemui" xlp
    complete -W "${packageNameList[@]} launcher systemui 123456" xl
    complete -W "${packageNameList[@]} launcher systemui monkey" xk

    alias .9='effect=.9图片制作工具;${ANDROID_SDK}/tools/draw9patch'
    alias xtp="effect=打印任务栈的栈顶信息;adb shell dumpsys activity top"
    alias xds='effect=手机截图;adb shell screencap -p /sdcard/sc.png&&adb pull /sdcard/sc.png ~/download/'
    alias xdv='effect=手机录屏;adb shell screenrecord /sdcard/sv.mp4&&adb pull /sdcard/sv.mp4 ~/download/'

    alias xqselect='effect=启动隐藏;adb shell am start -n com.mtk.select/com.mtk.select.SelectActivity'
    alias xqsetting='effect=启动设置;adb shell am start -n com.android.settings/com.android.settings.Settings'
    alias xqcamera='effect=启动Camera2;adb shell am start -n com.android.camera2/com.android.camera.CameraActivity'
    alias xqlauncher='effect=启动launcher;adb shell am start -n com.android.launcher3/com.android.launcher3.Launcher'
    alias xqfactorytest='effect=启动工厂测试;adb shell am start -n com.android.factorytest/com.android.factorytest.FTSamHomeActivity'
fi

    alias xc='effect=xbash主入口[旧];ftMain'
    alias xb='effect=系统维护;ftMaintainSystem'
    alias xcg='effect=清空回收站;ftCleanGarbage -a -t'
    alias xr='effect=更新xbash配置;ftResetXbash'
    alias xd='effect=MTK下载工具;ftMtkFlashTool'
    alias xcb='effect=进入xbash目录;cd $dirPathHomeXbash'
    alias xss='effect=无密码重启[默认10s];ftPowerManagement reboot'
    alias xs='effect=无密码关机[默认10s];ftPowerManagement shutdown'
    alias xs2av='effect=android版本查询;ftIniGetValue $rFilePathXbashDataBase androidSDK2Verison'

if [[ -n $(which git) ]];then
    # PS1显示分支信息
    [[ "$isUseCustomPS1" = "true" ]] && export PROMPT_COMMAND='ftSetBashPs1ByGitBranch;history -a'

    [ -f "$rFilePathGitBash" ] && source $rFilePathGitBash || echo -e "\033[1;31mgit bash 配置文件:\n$rFilePathGitBash 不存在\033[0m"
    alias xgla='effect=查看本地所有分支历史;ftGitLogShell -a $2'
    alias xgl='effect=格式化显示20或xxx条git_log;ftGitLogShell -n 20'
    alias xglh='effect=显示xx条commit的hash值;ftGitLogShell -c "%h" -n '
    alias xbrancha="effect=过滤git仓库所有分支;ftGitCheckoutBtanch -a -t"
    alias xbranch="effect=过滤git仓库已经checkout分支;ftGitCheckoutBtanch -t"
fi

#命令选项快速适配
complete -F _ftMain xc
complete -W " -a --adb -j -h -s" xr
complete -W "--backup --restore --sd_finish -b -r -s" xb