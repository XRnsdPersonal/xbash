#!/bin/bash
#####---------------------  bash 配置  ---------------------------#########
shopt -s histappend    #多个终端情况下，共享history
#####---------------------  xbash config  ---------------------------#########
alias ..="effect=进入父目录;cd .."
alias ...="effect=进入爷目录;cd ../.."
alias xcc='effect=进入原目录;cd $OLDPWD'
alias xr="effect=更新xbash配置;export isReset=true;source ~/.bashrc;export isReset="
if [ -f $rFilePathXbashModuleCommon ];then
    #加载common
    source  $rFilePathXbashModuleCommon
    #加载auto
    [ -f $rFilePathXbashModuleAuto ] && source $rFilePathXbashModuleAuto
    #加载input
    [ -f $rFilePathXbashModuleInput ] && [ "$rFilePathXbashModuleInput" != "$(readlink -f ~/.inputrc)" ] && rm -rf ~/.inputrc && ln -sf $rFilePathXbashModuleInput ~/.inputrc
    #处理bash历史记录
    if [ "$(whoami)" != "root" ];then
        filePathBashHistory=${dirPathHome}/.bash_history

        #历史去重
        filePathBashHistoryTemp=${filePathBashHistory}_temp
        filePathBashHistoryArchive=${filePathBashHistory}_archive
        filePathBashHistoryArchiveTemp=${filePathBashHistoryArchive}_temp
        cat $filePathBashHistory >> $filePathBashHistoryArchive \
        && sort -k2n $filePathBashHistoryArchive | awk '{if ($0!=line) print;line=$0}' >${filePathBashHistoryArchiveTemp} \
        && mv $filePathBashHistoryArchiveTemp $filePathBashHistoryArchive

        bashHistorySize=$(awk 'END{print NR}' $filePathBashHistoryArchive)

        #历史扩容
        filePathXbashDataBaseUser=${rDirPathXbashModuleUser}/${rNameUser}.database
        if [[ -f $filePathXbashDataBaseUser ]]; then
            bashHistorySizeBase=$(ftIniGetValue  $filePathXbashDataBaseUser xbash bashHistoryThresholdSize)
        else
            bashHistorySizeBase=$(ftIniGetValue  $rFilePathXbashDataBase xbash bashHistoryThresholdSize)
            mkdir $rDirPathXbashModuleUser > /dev/null
            ftIniCreateFileOrTag -r -p $filePathXbashDataBaseUser -t "xbash" -l "bashHistoryThresholdSize=${bashHistorySizeBase}"
        fi

        if (($bashHistorySize>$bashHistorySizeBase)); then
            ((bashHistorySize=$bashHistorySize+$(ftIniGetValue  $rFilePathXbashDataBase xbash bashHistoryIncrementalSize)))
            ftIniSetValue $filePathXbashDataBaseUser xbash bashHistoryThresholdSize $bashHistorySize
        else
            bashHistorySize=$bashHistorySizeBase
        fi

        export HISTSIZE=$bashHistorySize
        export HISTFILESIZE=$bashHistorySize
        cp -rf $filePathBashHistoryArchive $filePathBashHistory
    fi

    alias xc='effect=xbash主入口[旧];ftMain'
    alias xb='effect=系统维护;ftMaintainSystem'
    alias xd='effect=MTK下载工具;ftMtkFlashTool'
    alias xkf='effect=解除文件或目录占用;fuser -m -k -i'
    alias xsss='effect=注销系统;/usr/bin/gnome-session-quit --logout --force'
    alias xss='effect=无密码重启[默认10s];ftPowerManagement reboot'
    alias xs='effect=无密码关机[默认10s];ftPowerManagement shutdown'
    alias xX='effect=字符串转大写;_xX(){  echo "$1" | tr '[a-z]' '[A-Z]' ;};_xX $1'
    alias Xx='effect=字符串转小写;_Xx(){  echo "$1" | tr '[A-Z]' '[a-z]' ;};_Xx $1'
    alias xbh='effect=bash命令历史查询;cat $filePathBashHistory |grep'
    alias xSDK2AndroidVersion='effect=android版本查询;ftIniGetValue $rFilePathXbashDataBase androidSDK2Verison'

    if [ ! -z $(which git) ];then
        [ -f "$rFilePathGitBash" ] && source $rFilePathGitBash || echo -e "\033[1;31mgit bash 配置文件:\n$rFilePathGitBash 不存在\033[0m"
        alias xgla='effect=查看本地所有分支历史;ftGitLogShell -a $2'
        alias xgl='effect=格式化显示20或xxx条git_log;ftGitLogShell -n 20'
        alias xbrancha="effect=过滤git仓库所有分支;ftGitCheckoutBtanch -a"
        alias xbranch="effect=过滤git仓库已经checkout分支;ftGitCheckoutBtanch"
    fi

    #命令选项快速适配
    complete -W "--backup --restore --sd_finish -b -r -s" xb
    complete -F _ftMain xc
else
    echo -e "\033[1;31mXbash函数加载失败[ToolsPath=$rFilePathXbashModuleCommon]\033[0m"
fi

if [ ! -z $(which todos) ]&&[ ! -z $(which fromdos) ];then
    alias unix2dos=todos
    alias dos2unix=fromdos
fi

if [ ! -z $(which find) ];then
    alias xfind='effect=查找含特定字符串的文件;ftFind'
    alias xfs='effect=查找大于xxM的文件;_xFindFileBySize(){ find . -type f -size +$1  -print0 | xargs -0 du -h | sort -nr ;};_xFindFileBySize $1'
fi

if [ ! -z $(which du) ];then
    alias xdm='effect=查找最占用空间的20个目录;du -m --max-depth=2 | sort -nr | head -20 '
fi

if [ -d "$ANDROID_SDK" ];then
    alias xle='effect=过滤错误的进程;adb logcat "*:E"'
    alias .9='effect=.9图片制作工具;${ANDROID_SDK}/tools/draw9patch'
    alias xtp="effect=打印任务栈的栈顶信息;adb shell dumpsys activity top"
    alias xk='effect=干掉设备对应包名的进程;ftKillApplicationByPackageName'
    alias xl='effect=过滤adb_logcat;adb logcat -c;ftLogcatApplicationByPackageName'
    alias xlp="effect=根据包名过滤log;adb logcat -c;ftLogcatApplicationByPackageName"
    alias xds='effect=手机截图;adb shell screencap -p /sdcard/sc.png&&adb pull /sdcard/sc.png ~/download/'
    alias xdv='effect=手机录屏;adb shell screenrecord /sdcard/sv.mp4&&adb pull /sdcard/sv.mp4 ~/download/'

    alias xqselect='effect=启动隐藏;adb shell am start -n com.mtk.select/com.mtk.select.SelectActivity'
    alias xqsetting='effect=启动设置;adb shell am start -n com.android.settings/com.android.settings.Settings'
    alias xqcamera='effect=启动Camera2;adb shell am start -n com.android.camera2/com.android.camera.CameraActivity'
    alias xqlauncher='effect=启动launcher;adb shell am start -n com.android.launcher3/com.android.launcher3.Launcher'
    alias xqchanglogo='effect=启动隐藏动画;adb shell am start -n com.sprd.bootres/com.sprd.bootres.BootResSelectActivity'
    alias xqfactorytest='effect=启动工厂测试;adb shell am start -n com.android.factorytest/com.android.factorytest.FTSamHomeActivity'

    if [[ -f $rFilePathXbashDataBase ]]; then
        packageNameList="$(ftIniGetValue $rFilePathXbashDataBase androidDevicePackages packageNameList)"
    fi
    complete -W "${packageNameList[@]} launcher" xlc
    complete -W "${packageNameList[@]} launcher systemui monkey" xk
    complete -W "${packageNameList[@]} launcher systemui" xlp
    complete -W "${packageNameList[@]} launcher systemui 123456" xl
fi

if [ -d "vendor/mediatek" ];then
        alias xnum='echo "隐藏[Select]：";     cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_SELECT"|grep "final";\
                    echo "IMEI码显示：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_IMEI_DISPLAY"|grep "final";\
                    echo "IMEI码编辑：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_IMEI_EDIT"|grep "final";\
                    echo -n "    ";     cat vendor/lz/op_cust.sh|grep "LZ_IMEI_EDIT_NUM";\
                    echo "工厂模式：";   cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_FACTORY_TEST"|grep "final";\
                    echo -n "    "; cat vendor/lz/op_cust.sh|grep "LZ_FACTORY_TEST_NUM";\
                    echo "开关机动画修改：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_MULTI_BOOT_ANIMATION"|grep "final"'
fi

if [ -d "vendor/sprd" ];then
        alias xversion='cat packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java|grep "custom_build_version";\
                        cat packages/apps/Settings/src/com/android/settings/DeviceInfoSettings.java|grep "findPreference(KEY_BUILD_NUMBER).setSummary";\
                        cat packages/apps/ValidationTools/src/com/sprd/validationtools/itemstest/SystemVersionTest.java|grep -C 1 "platformVersion.setText(getString(R.string.build_number)"'
        alias xmodel='cat build/tools/buildinfo.sh|grep "ro.product.model=";\
                      cat build/tools/buildinfo.sh|grep "ro.product.brand=";\
                      cat build/tools/buildinfo.sh|grep "ro.product.name=";\
                      cat build/tools/buildinfo.sh|grep "ro.product.device=";\
                      cat device/sprd/scx20/sp7731c_1h10_32v4/sp7731c_1h10_32v4_oversea.mk |grep "product.model.num";\
                      cat frameworks/base/core/res/res/values/strings.xml |grep "wifi_tether_configure_ssid_default"'
        alias xcamera='cat device/sprd/scx20/sp7731c_1h10_32v4/BoardConfig.mk|grep "CAMERA_SUPPORT_SIZE :=";\
                       cat device/sprd/scx20/sp7731c_1h10_32v4/BoardConfig.mk|grep "LZ_CONFIG_CAMERA_TYPE :="'
        alias xnum='echo "隐藏[Select]：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_SELECT"|grep "final";\
                    echo "IMEI码显示：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_IMEI_DISPLAY"|grep "final";\
                    echo "IMEI码编辑：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "WRITE_IMEI"|grep "final";\
                    echo "工厂模式：";   cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "MMI_FACTORYMODE"|grep "final";\
                    echo "开关机动画修改：";    cat packages/apps/Dialer/src/com/android/dialer/SpecialCharSequenceMgr.java|grep "LOGO_CHANGE"|grep "final"'
fi
