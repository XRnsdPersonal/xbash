#!/bin/bash
#####-----------------------加载公用模块--------------------------#######
filePathCommonModule=${rDirPathXbashModule}/${rFileNameXbashModuleCommon}
[[ -f "$filePathCommonModule" ]] && source $filePathCommonModule
#####-----------------------xbash 示例函数--------------------------#######
complete -W "-x -y -n" ftExample
ftExample()
{
    local ftEffect=函数模板
    #可用性校验
    local isEnable=false
    [ "$isEnable" != "true" ]&&[ "$1" != "--df" ] &&  ftExample --df && return
    #Debug用
    # trap 'printf "变量跟踪\e[33m %-7s \e[0m \e[31m %-30s \e[0m  \n" [$LINENO]: example1=$example1' DEBUG
    # trap 'printf "变量跟踪\e[33m %-7s \e[0m \e[31m %-30s \e[0m  \n" [$LINENO]: example1=$example1' ERR

    while true; do case "$1" in
    -h | --help) cat<<EOF
#===================[   ${ftEffect}   ]的使用示例==============
#
#    ftExample xxxx
#=========================================================
EOF
    [ "$XMODULE" = "env" ] && return ; exit;;

    --df) cat<<EOF
#===================[   ${ftEffect}   ]的状态说明==============
#
#    ${ftEffect} 已被禁用，请确认
#=========================================================
EOF
    [ "$XMODULE" = "env" ] && return ; exit;;

    --rely) cat<<EOF
#===================[   ${ftEffect}   ]的依赖说明=============
#
#    ${ftEffect}依赖包 $2
#    请尝试使用 sudo apt-get install $2 补全依赖
#=========================================================
EOF
    [ "$XMODULE" = "env" ] && return ; exit;;

    --env) cat<<EOF
#===================[   ${ftEffect}   ]的使用环境说明==============
#
# 环境未初始化
# 使用前,请先初始化[xxxxxxxxx]
#=========================================================
EOF
    [ "$XMODULE" = "env" ] && return ; exit;;
    * ) break;;esac;done

    #依赖校验
    [ -z $(which exampleTools1) ] && ftExample --rely "exampleTools1" && return
    #参数解析
    local arg ; local arg2 ; local index ; for ((i=1;i<=$#;i++)) ; do
    eval value=\${${i}} ; arg=${value} ; ((index=i+1)) ; eval value2=\${${index}} ; arg2=${value2} ; case "${arg}" in
        -x )
            example1="${arg2:-"exampleDef1"}" ;;
    * ) [[ -z "${arg}" ]] && break  ;; esac;done
    #耦合校验
    local valCount=1
    local errorContent=
    (( $#!=$valCount )) && errorContent="${errorContent}\\n参数默认有${valCount}个,当前为$#个" 
    [ -z "$TTest1" ] && errorContent="${errorContent}\\n[示例1]TTest1=$TTest1"
    [ ! -z "$errorContent" ] && ftEcho -ea "函数[${ftEffect}]的参数错误${errorContent}\\n请查看下面说明:" && ftExample -h && return

    #实现主体
}
# ==============================================================================================================
